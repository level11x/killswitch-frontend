import Web3 from 'web3'
import logo from './logo.png';
import './App.css';
import { useState, useEffect, useCallback } from 'react'
import lpAbi from './abis/lp_abi.json'
import tarAbi from './abis/killswitch2_abi.json'
import masterChefAbi from './abis/masterchef_abi.json'

const masterChefAddress = '0x73feaa1eE314F8c655E354234017bE2193C9E24E'
const tarContractAddress = '0x0576961aAc8eb06F6A6A6975dFB70cE51065880D'
// const tarContractAddress = '0xD68a0Fc5E708bc1F70CdF2e19d64A5EcBEB8B01f' // old

function App() {
  const [acc, setAcc] = useState('')
  const [transactionState, setTransactionState] = useState('')
  const [allowance, setAllowance] = useState(0)
  const [walletLp, setWalletLp] = useState(0)
  const [stakedLp, setStakedLp] = useState(0)
  const [reward, setReward] = useState(0)

  const web3 = new Web3(window.ethereum)
  try {
    window.ethereum.enable().then(result => console.log('enable result', result))
  } catch (err) {
    console.log(err)
  }

  const fetch = useCallback(async () => {
    if (!web3) return

    const accs = await web3.eth.getAccounts()
    const acc = accs[0]
    if (acc) {
      setAcc(acc)
    }

    const lpContract = new web3.eth.Contract(lpAbi, '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6')
    const result = await lpContract.methods.allowance(acc, tarContractAddress).call()
    setAllowance(result/10**18)
    if (result === 0) {
      console.log('Need to approve contract')
    } else {
      console.log('Already approve for', result / 10**18, 'BNB')
    }
    const bal = await lpContract.methods.balanceOf(acc).call()
    setWalletLp(bal)

    const tarContract = new web3.eth.Contract(tarAbi, tarContractAddress)
    const staked = await tarContract.methods.stakeBalance(acc).call()
    setStakedLp(staked)
  }, [])

  useEffect(() => {
    fetch()
  }, [fetch])
  
  function approve() {
    const amount = '0x' + (10*10**18).toString(16)
    let options = {
      from: acc
    }
    const lpContract = new web3.eth.Contract(lpAbi, '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6')
    lpContract.methods.approve(tarContractAddress, amount).send(options)
      .on('error', (error) => setTransactionState(error))
      .on('transactionHash', (transactionHash) => setTransactionState('Submitted transaction: ' + transactionHash))
      .on('receipt', async (receipt) => {
        setTransactionState('Successfully approve contract, you can now stake LP')
        const result = await lpContract.methods.allowance(acc, tarContractAddress).call()
        setAllowance(result/10**18)
      })
  }

  async function calBalanceAndReward() {
    const lpContract = new web3.eth.Contract(lpAbi, '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6')
    const bal = await lpContract.methods.balanceOf(acc).call()
    setWalletLp(bal)

    const tarContract = new web3.eth.Contract(tarAbi, tarContractAddress)
    const staked = await tarContract.methods.stakeBalance(acc).call()
    setStakedLp(staked)

    const masterChefContract = new web3.eth.Contract(masterChefAbi, masterChefAddress)
    const userInfo = await masterChefContract.methods.userInfo(1, tarContractAddress).call()
    const poolInfo = await masterChefContract.methods.poolInfo(1).call()

    console.log(userInfo)
    console.log(poolInfo)
    let pendingReward = (userInfo.amount * poolInfo.accCakePerShare) / userInfo.rewardDebt
    setReward(pendingReward)
  }

  async function stake() {
    const lpContract = new web3.eth.Contract(lpAbi, '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6')
    let options = {
      from: acc
    }
    const tarContract = new web3.eth.Contract(tarAbi, tarContractAddress)
    tarContract.methods.stakeLPAllow().send(options)
      .on('error', (error) => setTransactionState(error))
      .on('transactionHash', (transactionHash) => setTransactionState('Submitted transaction: ' + transactionHash))
      .on('receipt', async (receipt) => {
        setTransactionState('Successfully stake LP')
        calBalanceAndReward()
      })
  }

  async function liquidate() {
    const lpContract = new web3.eth.Contract(lpAbi, '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6')
    let options = {
      from: acc
    }
    const tarContract = new web3.eth.Contract(tarAbi, tarContractAddress)
    tarContract.methods.AutoRemoveAll().send(options)
      .on('error', (error) => setTransactionState(error))
      .on('transactionHash', (transactionHash) => setTransactionState('Submitted transaction: ' + transactionHash))
      .on('receipt', async (receipt) => {
        setTransactionState('Successfully liquidate')
        calBalanceAndReward()
      })
  }

  return (
    <div className="App">
      <header className="App-header">
        <img src={logo} style={{height:'5em'}} className="App-logo" alt="logo" />
        <p>
          {/* KillSwitch, Stop loss! and Liquidate üíß */}
          {/* KillSwitch, Oneclick liquidate all üíß */}
          üíß Fastest liquidations ever on DEFI üíß
        </p>
        <p style={{textDecoration: 'underline'}}>!!! Disclaimer (Alpha V0.0.1) - ‡∏•‡∏≠‡∏á‡∏Å‡∏î‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏µ Bug ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö !!!<br/> </p>
        <li>‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ lp CAKE-BNB ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö </li>
        <li>‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥ lp CAKE-BNB ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡∏à‡∏∞ ERROR Web ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏û‡∏±‡∏á ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏à‡∏∞‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡πÉ‡∏ô Version ‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö</li>
        <li>‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏≠‡∏á‡∏•‡∏≠‡∏á‡πÅ‡∏Ñ‡πà‡∏ô‡∏¥‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏∑‡∏ô LP ‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÅ‡∏ï‡πà‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏£‡∏µ‡∏ö‡∏•‡∏≠‡∏á‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö </li>
        <li>Bonus : ‡∏Å‡∏≤‡∏£ liquidate position ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤ Gas ‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ñ‡∏£‡∏±‡∏ö‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Optimize ‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡∏Ñ‡πà‡∏≤ Gas ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ô‡∏∂‡∏á‡∏Ñ‡∏£‡∏±‡∏ö </li>
        <br/>
        {
          allowance === 0 ? (
            <button onClick={approve} style={{color: '#008CBA'}}>Approve</button>
          ) : (
            <div>
              <button onClick={stake} style={{backgroundColor: '#008CBA'}}>Stake { (walletLp / 10**18).toFixed(3) } LP</button>
              {/* <button onClick={liquidate} style={{backgroundColor: '#008CBA'}}>KillSwitch</button> */}
            </div>
          )
        }
        <p>{ transactionState }</p>
        <p>üèÑ You have staked { (stakedLp / 10**18).toFixed(3) } LP + { (reward / 10**18).toFixed(3) } Reward üèÇ</p>
        {
          allowance !== 0 ? (
            <div>
              <p>‚õî‚õî‚õî 1) ‡∏Å‡∏î Killswitch ‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô You have staked ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÄ‡∏™‡∏µ‡∏¢ Gas ‡∏ü‡∏£‡∏µ‡πÜ ‚õî‚õî‚õî</p>
              <p>‚õî‚õî‚õî 2) ‡∏Å‡∏î Killswitch ‡πÅ‡∏•‡πâ‡∏ß LP ‡∏à‡∏∞‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á REWARD ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ (CAKE) ‡πÅ‡∏•‡∏∞‡∏à‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô BNB ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‚õî‚õî‚õî</p>
              <p>‚õî‚õî‚õî 3) ‡∏ó‡∏¥‡πâ‡∏á‡πÑ‡∏ß‡πâ‡∏™‡∏±‡∏Å 1-2 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏°‡∏≤‡∏Å‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö Killswitch ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ö‡∏Å‡∏î ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô BNB ‡∏ß‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö :) ‚õî‚õî‚õî</p>
              <button onClick={liquidate} style={{backgroundColor: '#008CBA'}}>KillSwitch (Liquidate all position)</button>
            </div>
          ) : (
            null
          )
        }
        <br/>
      </header>
    </div>
  );
}

export default App;
